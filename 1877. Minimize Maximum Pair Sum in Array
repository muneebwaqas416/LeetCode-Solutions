int Partition(vector<int>& arr , int start , int end)
    {
        int Pivot = arr[end];
        int i = (start-1);
        for(int j = start; j<=end-1; j++)
        {
            if(arr[j]<Pivot)
            {
                i++;
                swap(arr[i],arr[j]);
            }
        }
        swap(arr[i+1],arr[end]);
        return i+1;
    }
    void Quicksort(vector<int>& nums , int start , int end)
    {
        if(start<end)
        {
            int loc = Partition(nums,start,end);
            Quicksort(nums,start,loc-1);
            Quicksort(nums,loc+1,end);
            
        }
    }
    int minPairSum(vector<int>& nums) {
        int size = nums.size();
        int rows = size/2;
        vector<vector<int>> arr(rows);
        Quicksort(nums,0,size-1);
        int sum = -100000;
        for(int i=0,j=size-1; i<rows,j>=rows; i++,j--)
        {
            int a = nums[i]+nums[j];
            if(a>sum)
            {
                sum = a;
            }
        }
        return sum;
        
    }
