void Count(int row, int col , int& count_1 , int &count_0,int& size, int& size_1,vector<vector<int>>& board)
    {
        int direction[8][2] = {{row+1,col},{row-1,col}, {row,col+1},{row,col-1},{row+1,col+1},{row-1,col-1},{row+1,col-1},{row-1,col+1}};
        for(int i=0 ; i<8; i++)
        {
            int a = direction[i][0];
            int b = direction[i][1];
            cout << a << b << endl;
            if(a>=0 && b>=0 && a<size && b<size_1)
            {
                if(board[a][b]==1)
                {
                    count_1++;
                    //cout << count_1 << a << b << endl;
                }else if(board[a][b]==0)
                {
                    count_0++;
                }
            }
        }
        
    }
    void gameOfLife(vector<vector<int>>& board) {
        int size = board.size();
        int size_1 = board[0].size();
        int count_1 = 0 , count_0 = 0;
        vector<vector<int>> board_1(size,vector<int>(size_1));
        for(int i=0 ; i<board.size(); i++)
        {
            for(int j=0; j<board[0].size(); j++)
            {
                board_1[i][j] = board[i][j];
            }
        }
        for(int i = 0; i<board.size(); i++)
        {
            for(int j=0; j<board[0].size(); j++)
            {
                count_1 = 0 ,count_0 = 0;
                cout << i << j << endl;
                Count(i,j,count_1,count_0,size,size_1,board_1);
                //cout << count_1 << count_0 << i << j << endl;
                if(board[i][j]==1)
                {
                    if(count_1<2)
                    {
                        board[i][j] = 0;
                    }else if(count_1==2 || count_1==3)
                    {
                        board[i][j] = 1;
                    }else if(count_1>3)
                    {
                        board[i][j] = 0;
                    }
                    
                }else if(board[i][j]==0)
                {
                    if(count_1==3)
                    {
                        board[i][j] = 1;
                    }
                }
            }
        }   
    }
